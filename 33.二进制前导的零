//一个十进制的数字，比如24，在一个32位的计算机内部被表达为00000000000000000000000000011000。
//可以看到，从左边数过来，在第一个1之前，有27个0。我们把这些0称作前导的零。
//输入一个整数，输出在32位表达下它前导的零的个数。
#include<stdio.h>

int f(int n);
int main(){
    int n;
    scanf("%d",&n);
    if(n==0) printf("32");
    if(n<0) printf("0");
  
    if(n>0){
        if(n>=fun(30)){
            printf("1");//2的30有31位，正数最前面为0，1个0
        }
        for(int i=1;i<=32;i++){//32位二进制范围：负2的31到正的2的31次方
            if(n<fun(i)){
                printf("%d",32-i);
                break;
            }
        }
    }
    return 0;
}
int fun(int n){
    int a=1;
    for(int i=0;i<n;i++){
        a*=2;
    }
    return a;
}
